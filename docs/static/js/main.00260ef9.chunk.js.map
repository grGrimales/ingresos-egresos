{"version":3,"sources":["helpers.js","components/ControlPresupuesto.js","components/Error.js","components/Formulario.js","components/Gasto.js","components/Listado.js","components/Pregunta.js","App.js","index.js"],"names":["revisarPresupuesto","presupuesto","restante","ControlPresupuesto","className","Error","mensaje","Formulario","setGasto","setCrearGasto","useState","nombre","setNombre","cantidad","setCantidad","error","setError","onSubmit","e","preventDefault","isNaN","trim","gasto","id","nanoid","type","placeholder","value","onChange","target","parseInt","Gasto","Listado","gastos","map","Pregunta","setPresupuesto","setRestante","setMostrarPregunta","App","mostrarPregunta","setGastos","crearGasto","useEffect","presupuestoRestante","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00260ef9.chunk.js","sourcesContent":["export const revisarPresupuesto = (presupuesto, restante) => {\n  let clase;\n\n  if (presupuesto / 4 > restante) {\n    clase = \"alert alert-danger\";\n  } else if (presupuesto / 2 > restante) {\n    clase = \"alert alert-warning\";\n  } else {\n    clase = \"alert alert-success\";\n  }\n\n  return clase;\n};\n","import React, { Fragment } from \"react\";\nimport { revisarPresupuesto } from \"../helpers\";\nimport PropTypes from \"prop-types\";\n\nexport const ControlPresupuesto = ({ presupuesto, restante }) => {\n  return (\n    <Fragment>\n      <div className=\"alert alert-primary\">Presupuesto: $ {presupuesto}</div>;\n      <div className={revisarPresupuesto(presupuesto, restante)}>\n        Restante: $ {restante}\n      </div>\n    </Fragment>\n  );\n};\n\nControlPresupuesto.propTypes = {\n  presupuesto: PropTypes.number.isRequired,\n  restante: PropTypes.number.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Error = ({ mensaje }) => (\n  <p className=\"alert alert-danger error\">{mensaje}</p>\n);\n\nError.propTypes = {\n  mensaje: PropTypes.string.isRequired,\n};\n","import React, { useState } from \"react\";\nimport { Error } from \"./Error\";\nimport { nanoid } from \"nanoid\";\nimport PropTypes from \"prop-types\";\n\nexport const Formulario = ({ setGasto, setCrearGasto }) => {\n  const [nombre, setNombre] = useState(\"\");\n  const [cantidad, setCantidad] = useState(0);\n  const [error, setError] = useState(false);\n\n  //Cuando el usuario agrega un gasto\n  const agregarGasto = (e) => {\n    e.preventDefault();\n\n    //validar\n    if (cantidad < 1 || isNaN(cantidad) || nombre.trim() === \"\") {\n      setError(true);\n      return;\n    }\n\n    //Construir el gasto\n    const gasto = {\n      nombre,\n      cantidad,\n      id: nanoid(),\n    };\n\n    //pasar el gasto al componente principal\n    setGasto(gasto);\n    setCrearGasto(true);\n\n    //Resetear el form\n    setNombre(\"\");\n    setCantidad(0);\n  };\n\n  return (\n    <form onSubmit={agregarGasto}>\n      <h2>Agrega tus gastos aquí</h2>\n      {error ? (\n        <Error mensaje=\"Ambos campos son obligatorios o Presupuesto incorrecto\" />\n      ) : null}\n      <div className=\"campo\">\n        <label>Nombre Gasto</label>\n        <input\n          type=\"text\"\n          className=\"u-full-width\"\n          placeholder=\"Ej. transporte\"\n          value={nombre}\n          onChange={(e) => setNombre(e.target.value)}\n        />\n      </div>\n      <div className=\"campo\">\n        <label>Cantidad Gasto</label>\n        <input\n          type=\"number\"\n          className=\"u-full-width\"\n          placeholder=\"Ej. 300\"\n          value={cantidad}\n          onChange={(e) => setCantidad(parseInt(e.target.value, 10) || \"\")}\n        />\n      </div>\n\n      <input\n        type=\"submit\"\n        className=\"u-full-width button-primary\"\n        value=\"Agregar gastos\"\n      />\n    </form>\n  );\n};\n\nFormulario.propTypes = {\n  setGasto: PropTypes.func.isRequired,\n  setCrearGasto: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Gasto = ({ gasto }) => {\n  return (\n    <li className=\"gastos\">\n      <p>\n        {gasto.nombre}\n        <span className=\"gasto\">$ {gasto.cantidad}</span>\n      </p>\n    </li>\n  );\n};\n\nGasto.propTypes = {\n  gasto: PropTypes.object.isRequired,\n};\n","import React from \"react\";\nimport { Gasto } from \"./Gasto\";\nimport PropTypes from \"prop-types\";\n\nexport const Listado = ({ gastos }) => {\n  return (\n    <div className=\"gastos-realizados\">\n      <h2>Listado</h2>\n\n      {gastos.map((gasto) => (\n        <Gasto key={gasto.id} gasto={gasto} />\n      ))}\n    </div>\n  );\n};\nListado.propTypes = {\n  gastos: PropTypes.array.isRequired,\n};\n","import React, { Fragment, useState } from \"react\";\nimport { Error } from \"./Error\";\nimport PropTypes from \"prop-types\";\n\nexport const Pregunta = ({\n  setPresupuesto,\n  setRestante,\n  setMostrarPregunta,\n}) => {\n  const [cantidad, setCantidad] = useState(0);\n  const [error, setError] = useState(false);\n  //Funcion que lee el presupuesto\n\n  const definirPresupuesto = (e) => {\n    setCantidad(parseInt(e.target.value));\n  };\n\n  //Submit para definir el presupuesto\n  const agregarPresupuesto = (e) => {\n    e.preventDefault();\n\n    if (cantidad < 1 || isNaN(cantidad)) {\n      setError(true);\n\n      return;\n    }\n    setError(false);\n\n    setPresupuesto(cantidad);\n    setRestante(cantidad);\n    setMostrarPregunta(false);\n  };\n\n  return (\n    <Fragment>\n      <h2>Coloca tu presupuesto</h2>\n      {error ? <Error mensaje=\"El monto no es válido\" /> : null}\n\n      <form onSubmit={agregarPresupuesto}>\n        <input\n          type=\"number\"\n          className=\"u-full-width\"\n          placeholder=\"coloca tu presupuesto\"\n          onChange={definirPresupuesto}\n        />\n\n        <input\n          type=\"submit\"\n          className=\"button-primary u-full-width\"\n          value=\"Definir Presupuesto\"\n        />\n      </form>\n    </Fragment>\n  );\n};\nPregunta.propTypes = {\n  setPresupuesto: PropTypes.func.isRequired,\n  setRestante: PropTypes.func.isRequired,\n  setMostrarPregunta: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from \"react\";\nimport { ControlPresupuesto } from \"./components/ControlPresupuesto\";\nimport { Formulario } from \"./components/Formulario\";\nimport { Listado } from \"./components/Listado\";\nimport { Pregunta } from \"./components/Pregunta\";\n\nfunction App() {\n  const [presupuesto, setPresupuesto] = useState(0);\n  const [restante, setRestante] = useState(0);\n  const [mostrarPregunta, setMostrarPregunta] = useState(true);\n  const [gastos, setGastos] = useState([]);\n  const [gasto, setGasto] = useState({});\n  const [crearGasto, setCrearGasto] = useState(false);\n\n  //Actualizar el restante\n  useEffect(() => {\n    if (crearGasto) {\n      //Agrega el nuevo ŕesupuesto\n      setGastos([...gastos, gasto]);\n    }\n\n    //Resta del presupuesto actual\n    const presupuestoRestante = restante - gasto.cantidad;\n    setRestante(presupuestoRestante);\n    setCrearGasto(false);\n  }, [gasto, crearGasto, gastos, restante]);\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h1>Gasto Semanal</h1>\n\n        <div className=\"contenido-principal contenido\">\n          {mostrarPregunta ? (\n            <Pregunta\n              setPresupuesto={setPresupuesto}\n              setRestante={setRestante}\n              setMostrarPregunta={setMostrarPregunta}\n            />\n          ) : (\n            <div className=\"row\">\n              <div className=\"one-half column\">\n                <Formulario setGasto={setGasto} setCrearGasto={setCrearGasto} />\n              </div>\n\n              <div className=\"one-half column\">\n                <Listado gastos={gastos} />\n\n                <ControlPresupuesto\n                  presupuesto={presupuesto}\n                  restante={restante}\n                />\n              </div>\n            </div>\n          )}\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}